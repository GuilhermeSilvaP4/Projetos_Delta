// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projetos_Delta.Data;

#nullable disable

namespace Projetos_Delta.Migrations
{
    [DbContext(typeof(Projetos_DeltaContext))]
    [Migration("20220503004202_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EmployeeProjeto", b =>
                {
                    b.Property<int>("EmployeesID")
                        .HasColumnType("int");

                    b.Property<int>("ProjetosID")
                        .HasColumnType("int");

                    b.HasKey("EmployeesID", "ProjetosID");

                    b.HasIndex("ProjetosID");

                    b.ToTable("EmployeeProjeto");
                });

            modelBuilder.Entity("Projetos_Delta.Models.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Departamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Projetos_Delta.Models.Projeto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Projeto");
                });

            modelBuilder.Entity("Projetos_Delta.Models.Request", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestNuber")
                        .HasColumnType("int");

                    b.Property<int?>("projetoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("projetoID");

                    b.ToTable("Request");
                });

            modelBuilder.Entity("EmployeeProjeto", b =>
                {
                    b.HasOne("Projetos_Delta.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projetos_Delta.Models.Projeto", null)
                        .WithMany()
                        .HasForeignKey("ProjetosID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Projetos_Delta.Models.Request", b =>
                {
                    b.HasOne("Projetos_Delta.Models.Employee", null)
                        .WithMany("Requests")
                        .HasForeignKey("EmployeeID");

                    b.HasOne("Projetos_Delta.Models.Projeto", "projeto")
                        .WithMany("Request")
                        .HasForeignKey("projetoID");

                    b.Navigation("projeto");
                });

            modelBuilder.Entity("Projetos_Delta.Models.Employee", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("Projetos_Delta.Models.Projeto", b =>
                {
                    b.Navigation("Request");
                });
#pragma warning restore 612, 618
        }
    }
}
